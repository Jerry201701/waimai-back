<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.diane.manage.dao.SysUserMapper">
  <resultMap id="BaseResultMap" type="com.diane.manage.model.SysUser">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="dept_id" jdbcType="BIGINT" property="deptId" />
    <result column="create_by" jdbcType="BIGINT" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="last_update_by" jdbcType="BIGINT" property="lastUpdateBy" />
    <result column="last_update_time" jdbcType="TIMESTAMP" property="lastUpdateTime" />
    <result column="del_flag" jdbcType="TINYINT" property="delFlag" />
    <result column="company_id" jdbcType="BIGINT" property="companyId" />
    <result column="delivery_id" jdbcType="BIGINT" property="deliveryId" />
    <result column="region_id" jdbcType="BIGINT" property="regionId" />
    <result column="shop_id" jdbcType="BIGINT" property="shopId" />
    <result column="region_name" jdbcType="BIGINT" property="regionName" />
  </resultMap>

  <resultMap id="PasswordResultMap" type="com.diane.manage.vo.PwdCheckVo">
    <result column="company_id" jdbcType="BIGINT" property="companyId" />
    <result column="delivery_id" jdbcType="BIGINT" property="deliveryId" />
    <result column="admin_id" jdbcType="BIGINT" property="adminId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="admin_operator_password" jdbcType="VARCHAR" property="adminOperatorPassword" />
    <result column="company_operator_password" jdbcType="VARCHAR" property="companyOperatorPassword" />
  </resultMap>
  <resultMap id="LoginResultMap" type="com.diane.manage.vo.LoginVo">
    <result column="company_id" jdbcType="BIGINT" property="companyId" />
    <result column="delivery_id" jdbcType="BIGINT" property="deliveryId" />
    <result column="shop_id" jdbcType="BIGINT" property="shopId" />
  </resultMap>


  <sql id="Base_Column_List">
    id, name, password, salt, email, mobile, status, dept_id, create_by, create_time, 
    last_update_by, last_update_time, del_flag,region_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.diane.manage.model.SysUser">
    insert into sys_user (id, name, password, 
      salt, email, mobile, 
      status, dept_id, create_by, 
      create_time, last_update_by, last_update_time, 
      del_flag)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{salt,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT}, #{deptId,jdbcType=BIGINT}, #{createBy,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{lastUpdateBy,jdbcType=BIGINT}, #{lastUpdateTime,jdbcType=TIMESTAMP}, 
      #{delFlag,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.diane.manage.model.SysUser" useGeneratedKeys="true" keyProperty="id">
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="deptId != null">
        dept_id,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="lastUpdateBy != null">
        last_update_by,
      </if>
      <if test="lastUpdateTime != null">
        last_update_time,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
      <if test="registerType != null">
        register_type,
      </if>
      <if test="regionId != null">
        region_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=BIGINT},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateBy != null">
        #{lastUpdateBy,jdbcType=BIGINT},
      </if>
      <if test="lastUpdateTime != null">
        #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=TINYINT},
      </if>
       <if test="registerType != null">
        #{registerType,jdbcType=TINYINT},
      </if>
       <if test="regionId != null">
        #{regionId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.diane.manage.model.SysUser">
    update sys_user
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="deptId != null">
        dept_id = #{deptId,jdbcType=BIGINT},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateBy != null">
        last_update_by = #{lastUpdateBy,jdbcType=BIGINT},
      </if>
      <if test="lastUpdateTime != null">
        last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=TINYINT},
      </if>
      <if test="regionId != null">
        region_id = #{regionId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.diane.manage.model.SysUser">
    update sys_user
    set name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      dept_id = #{deptId,jdbcType=BIGINT},
      create_by = #{createBy,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_update_by = #{lastUpdateBy,jdbcType=BIGINT},
      last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      del_flag = #{delFlag,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="findPage" resultMap="BaseResultMap">
    select u.*, (select d.name from sys_dept d where d.id = u.dept_id) deptName from sys_user u
    left join delivery_region r on r.id=u.region_id
  </select>
<!--  <select id="findByName" parameterType="java.lang.String" resultMap="BaseResultMap">-->
<!--    select u.*, (select d.name from sys_dept d where d.id = u.dept_id) deptName from sys_user u-->
<!--    where u.name = #{name,jdbcType=VARCHAR}-->
<!--  </select>-->
    <select id="findByName" parameterType="java.lang.String" resultMap="BaseResultMap">
      select u.id, u.name,u.password,u.salt,u.status,u.del_flag ,u.region_id
      from sys_user u
      where u.name = #{name,jdbcType=VARCHAR}
    </select>
  <select id="findPageByName" parameterType="java.lang.String" resultMap="BaseResultMap">
  	<bind name="pattern" value="'%' + _parameter.name + '%'" />
    select u.*, (select d.name from sys_dept d where d.id = u.dept_id) deptName from sys_user u
    where u.name like #{pattern}
  </select>
  <select id="findPageByNameAndEmail" parameterType="java.lang.String" resultMap="BaseResultMap">
  	<bind name="patternName" value="'%' + _parameter.name + '%'" />
  	<bind name="patternEmail" value="'%' + _parameter.email + '%'" />
    select u.*, (select d.name from sys_dept d where d.id = u.dept_id) deptName from sys_user u
    where u.name like #{patternName}
    and u.email like #{patternEmail}
  </select>
  
  <select id="findRegionByUser" parameterType="java.lang.Long" resultType="java.lang.Long">
        select region_id region from sys_user where id=#{userId}
  </select>
  <update id="changePassword" >
    update  sys_user set password =#{password},salt = #{salt} where id=#{userId}

  </update>

  <select id="findPasswordById" resultType="java.lang.String" parameterType="java.lang.Long">
    select password from sys_user where id=#{userId}
  </select>

  <select id="findPasswordInfo" parameterType="java.lang.Long" resultMap="PasswordResultMap">
        select u.id user_id,c.id company_id,d.id delivery_id,s.id admin_id ,u.password,u.salt,
        c.operate_password company_operator_password,s.operator_password admin_operator_password
        from sys_user u
        left join company_info c on u.id=c.user_id
        left join delivery d on d.user_id=u.id
        left join sub_admin s on s.user_id=u.id
        where u.id=#{userId}

  </select>

  <select id="findByMobilAndType"  resultMap="BaseResultMap">
      select u.id, u.name,u.password,u.salt,u.status,u.del_flag
      from sys_user u
      where u.name =#{mobile}
      and u.register_type = #{registerType}

    </select>

  <select id="findDeliveryByKeyWord" parameterType="java.lang.String" resultType="java.lang.Long">
        select d.id from delivery d,(select id  from sys_user
    <where>
      register_type=2
      <if test="keyWord !=null and keyWord != ''">
        <bind name="keyWord" value="'%' + keyWord + '%'"/>
        and name like CONCAT('%',#{keyWord},'%')
      </if>
    </where>
         ) s where d.user_id=s.id

  </select>


  <select id="showLoginInfo" parameterType="java.lang.String" resultMap="LoginResultMap">
    select distinct IFNULL(c.id,s.company_id) company_id,d.id delivery_id,s.shop_id
    from sys_user u
    left join company_info c on c.user_id=u.id
    left join sub_admin s on s.user_id=u.id
    left join delivery d on d.user_id=u.id
    where u.name=#{userName}
  </select>

</mapper>